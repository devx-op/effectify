{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "defaultBase": "master",
  "cli": {
    "packageManager": "pnpm"
  },
  "namedInputs": {
    "default": [
      "{projectRoot}/**/*",
      "sharedGlobals"
    ],
    "production": [
      "default",
      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/src/test-setup.[jt]s"
    ],
    "sharedGlobals": [
      "{workspaceRoot}/.github/workflows/ci.yml"
    ]
  },
  "nxCloudId": "683db0535b1b475e231bbf05",
  "plugins": [
    {
      "plugin": "@nx/js/typescript",
      "options": {
        "typecheck": {
          "targetName": "typecheck"
        },
        "build": {
          "targetName": "build",
          "configName": "tsconfig.lib.json",
          "buildDepsName": "build-deps",
          "watchDepsName": "watch-deps"
        }
      }
    },
    {
      "plugin": "@nx/vite/plugin",
      "exclude": [
        "apps/solid-app-start/**/*",
        "apps/react-app-remix/**/*"
      ],
      "options": {
        "buildTargetName": "build",
        "testTargetName": "test",
        "serveTargetName": "serve",
        "devTargetName": "dev",
        "previewTargetName": "preview",
        "serveStaticTargetName": "serve-static",
        "typecheckTargetName": "typecheck",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    }
  ],
  "release": {
    "projectsRelationship": "independent",
    "projects": [
      "packages/react/remix",
      "packages/react/router",
      "packages/node/better-auth",
      "packages/solid/query"
    ],
    "changelog": {
      "automaticFromRef": "HEAD~100",
      "projectChangelogs": {
        "renderOptions": {
          "authors": true,
          "commitReferences": false,
          "versionTitleDate": true,
          "applyUsernameToAuthors": true
        }
      }
    },
    "version": {
      "conventionalCommits": true,
      "fallbackCurrentVersionResolver": "disk"
    },
    "releaseTag": {
      "pattern": "{projectName}@{version}"
    }
  },
  "sync": {
    "disabledTaskSyncGenerators": [
      "@nx/js:typescript-sync"
    ]
  },
  "targets": {
    "local-registry": {
      "executor": "@nx/js:verdaccio",
      "options": {
        "port": 4873,
        "config": ".verdaccio/config.yml",
        "storage": "tmp/local-registry/storage"
      }
    },
    "publish-affected": {
      "executor": "nx:run-commands",
      "options": {
        "command": "echo 'Enter your NPM OTP code:' && read -r NPM_OTP && RELEASE_PROJECTS=$(jq -r '.release.projects[]' nx.json | xargs -I {} pnpm nx show project {} --json | jq -r '.name') && AFFECTED_PROJECTS=$(pnpm nx show projects --affected --base=HEAD~1 --head=HEAD --json | jq -r '.[]') && FILTERED_PROJECTS=$(echo \"$AFFECTED_PROJECTS\" | grep -F \"$RELEASE_PROJECTS\" | tr '\\n' ',' | sed 's/,$//') && pnpm nx release publish --projects=\"$FILTERED_PROJECTS\" --otp=$NPM_OTP",
        "shell": true
      }
    },
    "release-affected": {
      "executor": "nx:run-commands",
      "options": {
        "command": "echo 'Enter your NPM OTP code:' && read -r NPM_OTP && RELEASE_PROJECTS=$(jq -r '.release.projects[]' nx.json | xargs -I {} pnpm nx show project {} --json | jq -r '.name') && AFFECTED_PROJECTS=$(pnpm nx show projects --affected --base=HEAD~1 --head=HEAD --json | jq -r '.[]') && FILTERED_PROJECTS=$(echo \"$AFFECTED_PROJECTS\" | grep -F \"$RELEASE_PROJECTS\" | tr '\\n' ',' | sed 's/,$//') && pnpm nx release --projects=\"$FILTERED_PROJECTS\" --yes && pnpm nx release publish --projects=\"$FILTERED_PROJECTS\" --otp=$NPM_OTP",
        "shell": true
      }
    },
    "release-affected-dry-run": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm nx release --projects=@effectify/solid-query --dry-run",
        "shell": true
      }
    }
  },
  "targetDefaults": {
    "dev": {
      "cache": false,
      "dependsOn": [
        "^build"
      ]
    },
    "build": {
      "cache": true,
      "inputs": [
        "production",
        "^production"
      ],
      "dependsOn": [
        "^build"
      ]
    },
    "serve": {
      "cache": false,
      "dependsOn": [
        "^build"
      ]
    },
    "@nx/esbuild:esbuild": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "production",
        "^production"
      ]
    },
    "@nx/js:tsc": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "production",
        "^production"
      ]
    }
  }
}
