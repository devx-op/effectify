/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as protectedLayoutRouteImport } from './routes/(protected)/layout'
import { Route as authLayoutRouteImport } from './routes/(auth)/layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoFormRouteImport } from './routes/demo.form'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as protectedDashboardIndexRouteImport } from './routes/(protected)/dashboard/index'

const protectedLayoutRoute = protectedLayoutRouteImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRouteImport,
} as any)
const authLayoutRoute = authLayoutRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormRoute = DemoFormRouteImport.update({
  id: '/demo/form',
  path: '/demo/form',
  getParentRoute: () => rootRouteImport,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => authLayoutRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authLayoutRoute,
} as any)
const protectedDashboardIndexRoute = protectedDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => protectedLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof protectedLayoutRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/dashboard': typeof protectedDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof protectedLayoutRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/dashboard': typeof protectedDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authLayoutRouteWithChildren
  '/(protected)': typeof protectedLayoutRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/(protected)/dashboard/': typeof protectedDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/demo/form'
    | '/demo/tanstack-query'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/demo/form'
    | '/demo/tanstack-query'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(protected)'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/demo/form'
    | '/demo/tanstack-query'
    | '/(protected)/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLayoutRoute: typeof authLayoutRouteWithChildren
  protectedLayoutRoute: typeof protectedLayoutRouteWithChildren
  DemoFormRoute: typeof DemoFormRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form': {
      id: '/demo/form'
      path: '/demo/form'
      fullPath: '/demo/form'
      preLoaderRoute: typeof DemoFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(protected)/dashboard/': {
      id: '/(protected)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof protectedDashboardIndexRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
  }
}

interface authLayoutRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface protectedLayoutRouteChildren {
  protectedDashboardIndexRoute: typeof protectedDashboardIndexRoute
}

const protectedLayoutRouteChildren: protectedLayoutRouteChildren = {
  protectedDashboardIndexRoute: protectedDashboardIndexRoute,
}

const protectedLayoutRouteWithChildren = protectedLayoutRoute._addFileChildren(
  protectedLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLayoutRoute: authLayoutRouteWithChildren,
  protectedLayoutRoute: protectedLayoutRouteWithChildren,
  DemoFormRoute: DemoFormRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
